function e(e){return e&&'object'==typeof e&&'default'in e?e.default:e}function t(e){effector.is.store(e)||d('expect useStore argument to be a store');let t=f.useRef(e),r=f.useState(e.getState())[1];return p((()=>(t.current===e&&r(e.getState()),t.current=e,e.updates.watch(r))),[e]),e.getState()}function r({store:e,keys:r,fn:n}){effector.is.store(e)||d('useStoreMap expects a store'),Array.isArray(r)||d('useStoreMap expects an array as keys'),'function'!=typeof n&&d('useStoreMap expects a function');let o=f.useMemo((()=>effector.createStore(n(e.getState(),r)).on(e,((e,t)=>n(t,r)))),r),s=t(o);return p((()=>()=>{o.off(e),effector.clearNode(o,{deep:1})}),r),s}function n(e,t){return t.displayName=e,t}function o(e){let t=f.useContext(m);if(!t)throw Error('No scope found, consider adding <Provider> to app root');return t.find(e).meta.wrapped}function s(e,t={}){let r=i(e.open),n=i(e.close),o=i(e.set);((e,t={})=>{let r=f.useRef(null);p((()=>(e.open(r.current),()=>e.close(r.current))),[e]),((e,t)=>{if(e===t)return 1;if('object'==typeof e&&null!==e&&'object'==typeof t&&null!==t){let r=Object.keys(e),n=Object.keys(t);if(r.length!==n.length)return 0;for(let n=0;n<r.length;n++){let o=r[n];if(e[o]!==t[o])return 0}return 1}return 0})(r.current,t)||(r.current=t,e.set(t))})(f.useMemo((()=>({open:r,close:n,set:o})),[e,r]),t)}function a(e,t){return n(`Connect(${t.displayName||t.name||'Unknown'})`,(r=>f.createElement(t,Object.assign({},r,u(e)))))}function u(e){return t(o(e))}function c(e,t){let r=t.find(e);return effector.is.effect(e)?e=>{let n=(()=>{let e={};return e.req=new Promise(((t,r)=>{e.rs=t,e.rj=r})),e})();return effector.launch({target:r,params:{params:e,req:n},forkPage:t}),n.req}:e=>(effector.launch({target:r,params:e,forkPage:t}),e)}function i(e){let t=f.useContext(m),r=effector.is.unit(e)||'object'!=typeof e?{event:e}:e;return f.useMemo((()=>{if(effector.is.unit(e))return c(e,t);let r=Array.isArray(e)?[]:{};for(let n in e)r[n]=c(e[n],t);return r}),[t,...Object.keys(r),...Object.values(r)])}Object.defineProperty(exports,'__esModule',{value:1});var l=require('react'),effector=require('effector'),f=e(l);let p='undefined'!=typeof window?f.useLayoutEffect:f.useEffect,d=e=>{throw Error(e)};const m=f.createContext(null);let{Provider:y}=m;exports.Provider=y,exports.connect=e=>t=>a(t,e),exports.createComponent=()=>{throw new Error('not implemented')},exports.createContextComponent=(e,t,r)=>n=>{let o=f.useContext(t),s=u(e);return r(n,s,o)},exports.createGate=e=>{if(!e||!effector.is.domain(e.domain))throw Error('config.domain should exists');return(({name:e="gate",domain:t,defaultState:r,hook:o})=>{function s(e){return o(s,e),null}let a=effector.createEvent(),u=effector.createEvent(),c=effector.createEvent(),i=effector.createStore(Boolean(0),{named:'status'}).on(u,(()=>Boolean(1))).on(c,(()=>Boolean(0))),l=effector.createStore(r,{named:'state'}).on(a,((e,t)=>t)).reset(c);if(t){let{hooks:e}=t;effector.launch({target:[e.store,e.store,e.event,e.event,e.event],params:[i,l,u,c,a]})}return s.open=u,s.close=c,s.status=i,s.state=l,s.set=a,n("Gate:"+e,s)})({domain:e.domain,name:e.name,defaultState:'defaultState'in e?e.defaultState:{},hook:s})},exports.createReactState=a,exports.createStoreConsumer=e=>t=>{let r=u(e);return t.children(r)},exports.useEvent=i,exports.useGate=s,exports.useList=(e,t)=>((e,t)=>{let o,s=[];'object'==typeof t&&null!==t?(t.keys&&(s=t.keys),o=t.fn):o=t,effector.is.store(e)||d('expect useList first argument to be a store'),'function'!=typeof o&&d("expect useList's renderItem to be a function"),Array.isArray(s)||d("expect useList's keys to be an array");let a=f.useMemo((()=>{let t=n((e.shortName||'Unknown')+".Item",(({index:t,keys:n})=>{let o=r({store:e,keys:[t,...n],fn:(e,t)=>e[t[0]]});return c.current(o,t)}));return f.memo(t)}),[e]),u=r({store:e,keys:[e],fn:e=>e.length}),c=f.useRef(o);c.current=o;let i=f.useMemo((()=>s),s);return Array.from({length:u},((e,t)=>f.createElement(a,{index:t,key:t,keys:i})))})(o(e),t),exports.useStore=u,exports.useStoreMap=({store:e,keys:t,fn:n})=>r({store:o(e),keys:t,fn:n});
//# sourceMappingURL=ssr.js.map
