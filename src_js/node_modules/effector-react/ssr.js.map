{"version":3,"file":"ssr.js","sources":["effector-react/useStore.ts","effector-react/withDisplayName.ts","effector-react/ssr.ts","effector-react/createGate.ts","effector-react/useIsomorphicLayoutEffect.ts","effector-react/throw.ts","effector-react/useList.ts"],"sourcesContent":["import {Store, is, clearNode, createStore} from 'effector'\nimport React from 'react'\nimport {useIsomorphicLayoutEffect} from './useIsomorphicLayoutEffect'\nimport {throwError} from './throw'\n\nexport function useStore<State>(store: Store<State>): State {\n  if (!is.store(store)) throwError('expect useStore argument to be a store')\n  const currentStore = React.useRef(store)\n  const setState = React.useState(store.getState())[1]\n  useIsomorphicLayoutEffect(() => {\n    if (currentStore.current === store) {\n      setState(store.getState())\n    }\n    currentStore.current = store\n    return store.updates.watch(setState)\n  }, [store])\n  return store.getState()\n}\n\nexport function useStoreMap<State, Result, Keys extends ReadonlyArray<any>>({\n  store,\n  keys,\n  fn,\n}: {\n  store: Store<State>\n  keys: Keys\n  fn(state: State, keys: Keys): Result\n}): Result {\n  if (!is.store(store)) throwError('useStoreMap expects a store')\n  if (!Array.isArray(keys)) throwError('useStoreMap expects an array as keys')\n  if (typeof fn !== 'function') throwError('useStoreMap expects a function')\n  const result: Store<Result> = React.useMemo(\n    () =>\n      createStore(fn(store.getState(), keys)).on(store, (_, state) =>\n        fn(state, keys),\n      ),\n    keys,\n  )\n  const state = useStore(result)\n  useIsomorphicLayoutEffect(\n    () => () => {\n      result.off(store)\n      clearNode(result, {deep: true})\n    },\n    keys,\n  )\n  return state\n}\n","export function withDisplayName(name: string, Component: any) {\n  Component.displayName = name\n  return Component\n}\n","import React from 'react'\nimport {Domain, is, launch} from 'effector'\nimport {\n  useStore as commonUseStore,\n  useStoreMap as commonUseStoreMap,\n} from './useStore'\nimport {useList as commonUseList} from './useList'\nimport {withDisplayName} from './withDisplayName'\nimport {useGate as commonUseGate, createGateImplementation} from './createGate'\nimport {Gate} from './index.h'\n\nfunction createDefer() {\n  const result = {} as any\n  result.req = new Promise((rs, rj) => {\n    result.rs = rs\n    result.rj = rj\n  })\n  return result\n}\n\nconst Scope = React.createContext(null)\nexport const {Provider} = Scope\n\nfunction useScopeStore(store: any) {\n  const scope = React.useContext(Scope) as any\n  if (!scope)\n    throw Error('No scope found, consider adding <Provider> to app root')\n  return scope.find(store).meta.wrapped\n}\n\nexport function createGate<Props>(config: {\n  domain: Domain\n  defaultState: Props\n  name?: string\n}) {\n  if (!config || !is.domain(config.domain))\n    throw Error('config.domain should exists')\n\n  return createGateImplementation({\n    domain: config.domain,\n    name: config.name,\n    defaultState: 'defaultState' in config ? config.defaultState : {},\n    hook: useGate,\n  })\n}\n\nexport function useGate<Props>(\n  GateComponent: Gate<Props>,\n  props: Props = {} as any,\n) {\n  const open = useEvent(GateComponent.open)\n  const close = useEvent(GateComponent.close)\n  const set = useEvent(GateComponent.set)\n  const ForkedGate = React.useMemo(\n    () =>\n      ({\n        open,\n        close,\n        set,\n      } as Gate<Props>),\n    [GateComponent, open],\n  )\n  commonUseGate(ForkedGate, props)\n}\n\nexport function createStoreConsumer(store: any) {\n  return (props: any) => {\n    const state = useStore(store)\n    return props.children(state)\n  }\n}\n\nexport function createContextComponent(\n  store: any,\n  context: any,\n  renderProp: any,\n) {\n  return (props: any) => {\n    const ctx = React.useContext(context)\n    const state = useStore(store)\n    return renderProp(props, state, ctx)\n  }\n}\n\nexport function createComponent(shape: any) {\n  throw new Error('not implemented')\n}\n\nexport function createReactState(store: any, Component: any) {\n  const wrappedComponentName =\n    Component.displayName || Component.name || 'Unknown'\n  return withDisplayName(`Connect(${wrappedComponentName})`, (props: any) =>\n    React.createElement(Component, Object.assign({}, props, useStore(store))),\n  )\n}\n\nexport function connect(Component: any) {\n  return (store: any) => createReactState(store, Component)\n}\n\n/** useStore wrapper for scopes */\nexport function useStore(store: any) {\n  return commonUseStore(useScopeStore(store))\n}\n/** useList wrapper for scopes */\nexport function useList(store: any, opts: any) {\n  return commonUseList(useScopeStore(store), opts)\n}\n/** useStoreMap wrapper for scopes */\nexport function useStoreMap({store, keys, fn}: any) {\n  return commonUseStoreMap({\n    store: useScopeStore(store),\n    keys,\n    fn,\n  })\n}\n\nfunction resolveUnit(unit: any, scope: any) {\n  const localUnit = scope.find(unit)\n  return is.effect(unit)\n    ? (params: any) => {\n        const req = createDefer()\n        //@ts-ignore\n        launch({target: localUnit, params: {params, req}, forkPage: scope})\n        return req.req\n      }\n    : (payload: any) => {\n        //@ts-ignore\n        launch({target: localUnit, params: payload, forkPage: scope})\n        return payload\n      }\n}\n\n/**\nbind event to scope\n\nworks like React.useCallback, but for scopes\n*/\nexport function useEvent(eventObject: any) {\n  const scope = React.useContext(Scope) as any\n  const isShape = !is.unit(eventObject) && typeof eventObject === 'object'\n  const events = isShape ? eventObject : {event: eventObject}\n\n  return React.useMemo(() => {\n    if (is.unit(eventObject)) {\n      return resolveUnit(eventObject, scope)\n    }\n    const shape = Array.isArray(eventObject) ? [] : ({} as any)\n    for (const key in eventObject) {\n      shape[key] = resolveUnit(eventObject[key], scope)\n    }\n    return shape\n  }, [scope, ...Object.keys(events), ...Object.values(events)])\n}\n","import React from 'react'\nimport {createStore, launch, Store, Domain, createEvent} from 'effector'\nimport {Gate} from './index.h'\nimport {useIsomorphicLayoutEffect} from './useIsomorphicLayoutEffect'\nimport {withDisplayName} from './withDisplayName'\n\nexport function useGate<Props>(\n  GateComponent: Gate<Props>,\n  props: Props = {} as any,\n) {\n  const propsRef = React.useRef<any>(null)\n  useIsomorphicLayoutEffect(() => {\n    GateComponent.open(propsRef.current)\n    return () => GateComponent.close(propsRef.current) as any\n  }, [GateComponent])\n  if (!shallowCompare(propsRef.current, props)) {\n    propsRef.current = props\n    GateComponent.set(props)\n  }\n}\n\nfunction shallowCompare(a: any, b: any) {\n  if (a === b) return true\n  if (\n    typeof a === 'object' &&\n    a !== null &&\n    typeof b === 'object' &&\n    b !== null\n  ) {\n    const aKeys = Object.keys(a)\n    const bKeys = Object.keys(b)\n    if (aKeys.length !== bKeys.length) return false\n    for (let i = 0; i < aKeys.length; i++) {\n      const key = aKeys[i]\n      if (a[key] !== b[key]) return false\n    }\n    return true\n  }\n  return false\n}\nexport function createGateImplementation<State>({\n  name = 'gate',\n  domain,\n  defaultState,\n  hook: useGateHook,\n}: {\n  name?: string\n  domain?: Domain\n  defaultState: State | {}\n  hook: typeof useGate\n}): Gate<State> {\n  const set = createEvent<State>()\n  const open = createEvent<State>()\n  const close = createEvent<State>()\n  //@ts-ignore\n  const status = createStore(Boolean(false), {named: 'status'})\n    .on(open, () => Boolean(true))\n    .on(close, () => Boolean(false))\n  //@ts-ignore\n  const state: Store<Props> = createStore(defaultState, {named: 'state'})\n    .on(set, (_, state) => state)\n    .reset(close)\n  if (domain) {\n    const {hooks} = domain as any\n    launch({\n      target: [\n        hooks.store,\n        hooks.store,\n        hooks.event,\n        hooks.event,\n        hooks.event,\n      ] as any,\n      params: [status, state, open, close, set],\n    })\n  }\n  function GateComponent(props: State) {\n    useGateHook(GateComponent as any, props)\n    return null\n  }\n  GateComponent.open = open\n  GateComponent.close = close\n  GateComponent.status = status\n  GateComponent.state = state\n  GateComponent.set = set\n  return withDisplayName(`Gate:${name}`, GateComponent)\n}\nexport function createGate<Props>(\n  name: string = 'gate',\n  defaultState: Props = {} as any,\n): Gate<Props> {\n  let domain\n  if (typeof name === 'object' && name !== null) {\n    if ('defaultState' in name) {\n      //@ts-ignore\n      defaultState = name.defaultState\n    }\n    //@ts-ignore\n    if (name.domain) domain = name.domain\n    //@ts-ignore\n    name = name.name\n  }\n  return createGateImplementation({\n    name,\n    domain,\n    defaultState,\n    hook: useGate,\n  })\n}\n","import React from 'react'\n\nexport const useIsomorphicLayoutEffect =\n  typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect\n","export const throwError = (message: string) => {\n  throw Error(message)\n}\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport React from 'react'\nimport {Store, is} from 'effector'\nimport {useStoreMap} from './useStore'\nimport {withDisplayName} from './withDisplayName'\nimport {throwError} from './throw'\n\nexport function useList<T>(\n  list: Store<T[]>,\n  renderItem:\n    | {\n        keys?: any[]\n        fn(item: T, index: number): React.ReactNode\n      }\n    | ((item: T, index: number) => React.ReactNode),\n): React.ReactNode {\n  let keys = [] as any[]\n  let fn\n  if (typeof renderItem === 'object' && renderItem !== null) {\n    if (renderItem.keys) keys = renderItem.keys\n    fn = renderItem.fn\n  } else {\n    fn = renderItem\n  }\n  if (!is.store(list)) throwError('expect useList first argument to be a store')\n  if (typeof fn !== 'function')\n    throwError(\"expect useList's renderItem to be a function\")\n  if (!Array.isArray(keys)) throwError(\"expect useList's keys to be an array\")\n  const Item = React.useMemo(() => {\n    const Item = withDisplayName(\n      `${list.shortName || 'Unknown'}.Item`,\n      ({index, keys}: {index: number; keys: any[]}) => {\n        const item = useStoreMap({\n          store: list,\n          keys: [index, ...keys],\n          fn: (list, keys) => list[keys[0]],\n        })\n        return fnRef.current(item, index)\n      },\n    )\n    return React.memo(Item)\n  }, [list])\n  const length = useStoreMap({\n    store: list,\n    keys: [list],\n    fn: list => list.length,\n  })\n  const fnRef = React.useRef(fn)\n  fnRef.current = fn\n  const keysSelfMemo = React.useMemo(() => keys, keys)\n  return Array.from({length}, (_, i) =>\n    React.createElement(Item, {\n      index: i,\n      key: i,\n      keys: keysSelfMemo,\n    }),\n  )\n}\n"],"names":["useStore","store","is","throwError","currentStore","React","useRef","setState","useState","getState","useIsomorphicLayoutEffect","current","updates","watch","useStoreMap","keys","fn","Array","isArray","result","useMemo","createStore","on","_","state","off","clearNode","deep","withDisplayName","name","Component","displayName","useScopeStore","scope","useContext","Scope","Error","find","meta","wrapped","useGate","GateComponent","props","open","useEvent","close","set","propsRef","a","b","aKeys","Object","bKeys","length","i","key","shallowCompare","commonUseGate","createReactState","createElement","assign","commonUseStore","resolveUnit","unit","localUnit","effect","params","req","Promise","rs","rj","createDefer","launch","target","forkPage","payload","eventObject","events","event","shape","values","window","useLayoutEffect","useEffect","message","createContext","Provider","context","renderProp","ctx","config","domain","defaultState","hook","useGateHook","createEvent","status","Boolean","named","reset","hooks","createGateImplementation","children","opts","list","renderItem","Item","shortName","index","item","fnRef","memo","keysSelfMemo","from","commonUseList","commonUseStoreMap"],"mappings":"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"}